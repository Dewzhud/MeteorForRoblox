local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local Camera = game.Workspace.CurrentCamera

local aimbotEnabled = false
local aimSensitivity = 0.5  -- Adjust this value as necessary
local aimRange = 100  -- Default aiming range
local cameraType = "First Person"  -- Default camera type

-- Function to create the Aimbot UI
local function CreateAimbotUI()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "AimbotUI"
    ScreenGui.Parent = CoreGui
    ScreenGui.ResetOnSpawn = false

    -- Main Frame
    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0.3, 0, 0.4, 0)
    MainFrame.Position = UDim2.new(0.35, 0, 0.3, 0)
    MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    MainFrame.BorderSizePixel = 0
    MainFrame.Visible = false  -- Start hidden
    MainFrame.Parent = ScreenGui

    local MainFrameCorner = Instance.new("UICorner")
    MainFrameCorner.CornerRadius = UDim.new(0, 10)
    MainFrameCorner.Parent = MainFrame

    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(1, 0, 0, 40)
    Title.BackgroundTransparency = 1
    Title.Text = "Aimbot Settings"
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextSize = 24
    Title.TextStrokeTransparency = 0.5
    Title.Parent = MainFrame

    -- Content Frame
    local ContentFrame = Instance.new("ScrollingFrame")
    ContentFrame.Size = UDim2.new(1, -10, 1, -50)
    ContentFrame.Position = UDim2.new(0, 5, 0, 50)
    ContentFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    ContentFrame.ScrollBarThickness = 6
    ContentFrame.CanvasSize = UDim2.new(0, 0, 5, 0)
    ContentFrame.Parent = MainFrame

    local ContentLayout = Instance.new("UIListLayout")
    ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
    ContentLayout.Padding = UDim.new(0, 10)
    ContentLayout.Parent = ContentFrame

    return {
        ScreenGui = ScreenGui,
        MainFrame = MainFrame,
        ContentFrame = ContentFrame
    }
end

-- Function to create a toggle for the aimbot
local function CreateToggle(parent, labelText, initialState, callback)
    local ToggleFrame = Instance.new("Frame")
    ToggleFrame.Size = UDim2.new(1, -10, 0, 50)
    ToggleFrame.BackgroundTransparency = 1
    ToggleFrame.Parent = parent

    local ToggleLabel = Instance.new("TextLabel")
    ToggleLabel.Size = UDim2.new(0.5, -10, 1, 0)
    ToggleLabel.Position = UDim2.new(0, 0, 0, 0)
    ToggleLabel.BackgroundTransparency = 1
    ToggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleLabel.Text = labelText
    ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
    ToggleLabel.Parent = ToggleFrame

    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Size = UDim2.new(0.5, -10, 1, 0)
    ToggleButton.Position = UDim2.new(0.5, 10, 0, 0)
    ToggleButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleButton.Text = initialState and "Enabled" or "Disabled"
    ToggleButton.Parent = ToggleFrame

    local ToggleState = initialState

    ToggleButton.MouseButton1Click:Connect(function()
        ToggleState = not ToggleState
        ToggleButton.Text = ToggleState and "Enabled" or "Disabled"
        callback(ToggleState)
    end)
end

-- Function to create a slider for aiming sensitivity
local function CreateSlider(parent, min, max, default, text, callback)
    local SliderFrame = Instance.new("Frame")
    SliderFrame.Size = UDim2.new(1, -10, 0, 70)
    SliderFrame.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    SliderFrame.Parent = parent
    
    local SliderText = Instance.new("TextLabel")
    SliderText.Size = UDim2.new(1, -10, 0, 30)
    SliderText.Position = UDim2.new(0, 5, 0, 5)
    SliderText.BackgroundTransparency = 1
    SliderText.TextColor3 = Color3.fromRGB(255, 255, 255)
    SliderText.Text = text .. ": " .. default
    SliderText.Parent = SliderFrame

    local SliderInput = Instance.new("TextBox")
    SliderInput.Size = UDim2.new(1, -10, 0, 25)
    SliderInput.Position = UDim2.new(0, 5, 1, -30)
    SliderInput.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
    SliderInput.Text = tostring(default)
    SliderInput.Parent = SliderFrame

    SliderInput.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            local value = tonumber(SliderInput.Text)
            if value then
                value = math.clamp(value, min, max)
                SliderText.Text = text .. ": " .. tostring(value)
                callback(value)
            end
        end
    end)
end

-- Function to create a dropdown menu
local function CreateDropdown(parent, labelText, options, initialOption, callback)
    local DropdownFrame = Instance.new("Frame")
    DropdownFrame.Size = UDim2.new(1, -10, 0, 50)
    DropdownFrame.BackgroundTransparency = 1
    DropdownFrame.Parent = parent

    local DropdownLabel = Instance.new("TextLabel")
    DropdownLabel.Size = UDim2.new(0.5, -10, 1, 0)
    DropdownLabel.Position = UDim2.new(0, 0, 0, 0)
    DropdownLabel.BackgroundTransparency = 1
    DropdownLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    DropdownLabel.Text = labelText
    DropdownLabel.TextXAlignment = Enum.TextXAlignment.Left
    DropdownLabel.Parent = DropdownFrame

    local DropdownButton = Instance.new("TextButton")
    DropdownButton.Size = UDim2.new(0.5, -10, 1, 0)
    DropdownButton.Position = UDim2.new(0.5, 10, 0, 0)
    DropdownButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    DropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    DropdownButton.Text = initialOption
    DropdownButton.Parent = DropdownFrame

    local DropdownList = Instance.new("Frame")
    DropdownList.Size = UDim2.new(1, 0, 0, 0)
    DropdownList.Position = UDim2.new(0, 0, 1, 0)
    DropdownList.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    DropdownList.Visible = false
    DropdownList.Parent = DropdownFrame

    local function PopulateDropdown()
        for _, option in ipairs(options) do
            local OptionButton = Instance.new("TextButton")
            OptionButton.Size = UDim2.new(1, 0, 0, 30)
            OptionButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            OptionButton.Text = option
            OptionButton.Parent = DropdownList

            OptionButton.MouseButton1Click:Connect(function()
                DropdownButton.Text = option
                DropdownList.Visible = false
                callback(option)  -- Call the callback with the selected option
            end)
        end
    end

    DropdownButton.MouseButton1Click:Connect(function()
        DropdownList.Visible = not DropdownList.Visible
    end)

    PopulateDropdown()
end

-- Function to create a button to toggle the UI visibility
local function CreateToggleButton(ui)
    local ToggleUIButton = Instance.new("TextButton")
    ToggleUIButton.Size = UDim2.new(0.1, 0, 0.05, 0)
    ToggleUIButton.Position = UDim2.new(0.9, 0, 0.9, 0) -- Positioned at bottom right
    ToggleUIButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    ToggleUIButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleUIButton.Text = "Open UI"
    ToggleUIButton.Parent = ui.ScreenGui

    ToggleUIButton.MouseButton1Click:Connect(function()
        ui.MainFrame.Visible = not ui.MainFrame.Visible
        ToggleUIButton.Text = ui.MainFrame.Visible and "Close UI" or "Open UI"
    end)
end

-- Function to create the main UI
local function InitializeAimbotUI()
    local ui = CreateAimbotUI()

    CreateToggle(ui.ContentFrame, "Enable Aimbot", false, function(state)
        aimbotEnabled = state
        if aimbotEnabled then
            print("Aimbot enabled.")
            -- Add aimbot functionality
            RunService.RenderStepped:Connect(function()
                if aimbotEnabled then
                    local target = nil
                    local closestDistance = math.huge
                    for _, player in pairs(Players:GetPlayers()) do
                        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                            local distance = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).magnitude
                            if distance < closestDistance and distance <= aimRange then
                                closestDistance = distance
                                target = player
                            end
                        end
                    end

                    if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                        local aimPosition = target.Character.HumanoidRootPart.Position

                        -- Smooth camera rotation towards the target
                        local cameraCFrame = CFrame.new(Camera.CFrame.Position, aimPosition)
                        Camera.CFrame = cameraCFrame:Lerp(Camera.CFrame, aimSensitivity)

                        local lookVector = (aimPosition - LocalPlayer.Character.HumanoidRootPart.Position).unit
                        local targetPosition = aimPosition + (lookVector * aimSensitivity)
                        Mouse.Hit = CFrame.new(targetPosition)
                    end
                end
            end)
        else
            print("Aimbot disabled.")
        end
    end)

    CreateSlider(ui.ContentFrame, 1, 100, 50, "Aim Sensitivity", function(value)
        aimSensitivity = value / 100 -- Convert to a range suitable for aiming adjustments
        print("Aiming sensitivity set to:", aimSensitivity)
    end)

    CreateSlider(ui.ContentFrame, 1, 500, aimRange, "Aim Range", function(value)
        aimRange = value
        print("Aiming range set to:", aimRange)
    end)

    CreateDropdown(ui.ContentFrame, "Camera Type", {"First Person", "Third Person"}, cameraType, function(option)
        cameraType = option
        print("Camera type set to:", cameraType)
    end)

    -- Create the toggle button for the UI
    CreateToggleButton(ui)

    -- Make the UI draggable
    local function MakeDraggable(frame)
        local dragging = false
        local dragInput, dragStart, startPos

        frame.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                dragStart = input.Position
                startPos = frame.Position

                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)

        UserInputService.InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local delta = input.Position - dragStart
                frame.Position = UDim2.new(
                    startPos.X.Scale,
                    startPos.X.Offset + delta.X,
                    startPos.Y.Scale,
                    startPos.Y.Offset + delta.Y
                )
            end
        end)
    end

    MakeDraggable(ui.MainFrame)
end

-- Run the Aimbot UI
InitializeAimbotUI()
